{"version":3,"sources":["scripts/utilities.js","scripts/field.js","scripts/game.js","scripts/movement.js","scripts/main.js"],"names":["getRandom","max","Math","trunc","random","findLastIndex","array","callback","i","length","tbody","document","querySelector","field","Array","children","resetField","fill","draw","j","innerText","className","classList","add","spawn","availableCells","push","newIndex","checkIsOver","winMessage","loseMessage","score","started","resetGame","winGame","remove","loseGame","moveDown","moved","nextBlock","slice","value","current","moveLeft","findIndex","moveRight","moveUp","button","messages","querySelectorAll","movementByKey","addEventListener","keyboardEvent","key","startsWith"],"mappings":";AAYC,aAZM,SAASA,EAAUC,GACjBC,OAAAA,KAAKC,MAAMD,KAAKE,SAAWH,GAG7B,SAASI,EAAcC,EAAOC,GAC9B,IAAA,IAAIC,EAAIF,EAAMG,OAAS,EAAGD,GAAK,IAAKA,EACnCD,GAAAA,EAASD,EAAME,GAAIA,EAAGF,GACjBE,OAAAA,EAIJ,OAAC,EACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,QAAA,cAAA;;ACkDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAAA,QAAA,KAAA,EAAA,QAAA,MAAA,EAAA,QAAA,YAAA,EAAA,QAAA,WAAA,EA9DD,IAAA,EAAA,QAAA,eAEME,EAAQC,SAASC,cAAc,SAExBC,EAAQ,IAAIC,MAAMJ,EAAMK,SAASN,QAEvC,SAASO,IACT,IAAA,IAAIR,EAAI,EAAGA,EAAIK,EAAMJ,SAAUD,EAClCK,EAAML,GAAK,IAAIM,MAAMJ,EAAMK,SAASP,GAAGO,SAASN,QAAQQ,KAAK,GAI1D,SAASC,IACT,IAAA,IAAIV,EAAI,EAAGA,EAAIK,EAAMJ,SAAUD,EAC7B,IAAA,IAAIW,EAAI,EAAGA,EAAIN,EAAML,GAAGC,SAAUU,EACrCT,EAAMK,SAASP,GAAGO,SAASI,GAAGC,UAAY,GAC1CV,EAAMK,SAASP,GAAGO,SAASI,GAAGE,UAAY,aAEtCR,EAAML,GAAGW,KACXT,EAAMK,SAASP,GAAGO,SAASI,GAAGC,UAAYP,EAAML,GAAGW,GAEnDT,EAAMK,SAASP,GAAGO,SAASI,GACxBG,UAAUC,IAAmBV,eAAAA,OAAAA,EAAML,GAAGW,MAM1C,SAASK,IAGT,IAFCC,IAAAA,EAAiB,GAEdjB,EAAI,EAAGA,EAAIK,EAAMJ,SAAUD,EAC7B,IAAA,IAAIW,EAAI,EAAGA,EAAIN,EAAML,GAAGC,SAAUU,EAChCN,EAAML,GAAGW,IACZM,EAAeC,KAAKlB,EAAIK,EAAML,GAAGC,OAASU,GAK1CQ,IAAAA,EAAWF,GAAe,EAAUA,EAAAA,WAAAA,EAAehB,SAEzDI,EAAMX,KAAKC,MAAMwB,EAAWd,EAAM,GAAGJ,SAASkB,EAAWd,EAAM,GAAGJ,QAC9DP,KAAKE,UAAY,GAAM,EAAI,EAG1B,SAASwB,IACT,IAAA,IAAIpB,EAAI,EAAGA,EAAIK,EAAMJ,SAAUD,EAC7B,IAAA,IAAIW,EAAI,EAAGA,EAAIN,EAAML,GAAGC,SAAUU,EAAG,CACpC,IAACN,EAAML,GAAGW,GACL,OAAA,EAGJX,GAAAA,EAAI,GAAKK,EAAML,GAAGW,KAAON,EAAML,EAAI,GAAGW,IACrCX,EAAIK,EAAMJ,OAAS,GAAKI,EAAML,GAAGW,KAAON,EAAML,EAAI,GAAGW,IACrDA,EAAI,GAAKN,EAAML,GAAGW,KAAON,EAAML,GAAGW,EAAI,IACtCA,EAAIN,EAAML,GAAGC,OAAS,GAAKI,EAAML,GAAGW,KAAON,EAAML,GAAGW,EAAI,GACrD,OAAA,EAKN,OAAA,EACR,QAAA,MAAA;;AC7BA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,QAAA,QAAA,EAAA,QAAA,SAAA,EAAA,QAAA,QAAA,QAAA,WAAA,EAjCD,IAAA,EAAA,QAAA,WAEMU,EAAalB,SAASC,cAAc,gBACpCkB,EAAcnB,SAASC,cAAc,iBAE9BmB,EAAQpB,SAASC,cAAc,eA4B3C,QAAA,MAAA,EA3BM,IAAIoB,GAAU,EAEd,SAASC,KACd,EAAA,EAAA,eACA,EAAA,EAAA,UACA,EAAA,EAAA,SAEAD,QAAAA,QAAAA,GAAU,EACVD,EAAMX,UAAY,EAGb,SAASc,EAAQ1B,EAAGW,GACrBN,OAAgB,OAAhBA,EAAML,MAAAA,GAAGW,KACXU,EAAWP,UAAUa,OAAO,UAC5BH,QAAAA,QAAAA,GAAU,GAEH,GAMJ,SAASI,KACV,EAAJ,EAAA,iBACEN,EAAYR,UAAUa,OAAO,UAC7BH,QAAAA,QAAAA,GAAU,GAEb,QAAA,QAAA;;ACqGA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,QAAA,UAAA,EAAA,QAAA,OAAA,EAtID,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,eACA,EAAA,QAAA,UAoIC,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAlIM,SAASK,IAGT,IAFDC,IAAAA,GAAQ,EAEH9B,EAAIK,EAAMJ,MAAAA,OAAS,EAAGD,GAAK,IAAKA,EAClC,IADqC,IAAA,EAAA,SAAA,GAElC+B,IAAAA,GAAY,EAAc1B,EAAAA,eAAAA,EAAM2B,MAAAA,MAAM,EAAGhC,GAAI,SAAAiC,GAASA,OAAAA,EAAMtB,KAE9DoB,IAAe,IAAfA,GACE1B,EAAML,MAAAA,GAAGW,IAAMN,EAAML,MAAAA,GAAGW,KAAON,EAAM0B,MAAAA,GAAWpB,GACpD,OADyD,EAAA,EACzD,WAGIuB,IAAAA,EAAU7B,EAAML,MAAAA,GAAGW,GAMrB,GAJEX,EAAAA,MAAAA,GAAGW,IAAMN,EAAM0B,MAAAA,GAAWpB,GAC1BoB,EAAAA,MAAAA,GAAWpB,GAAK,EACtBmB,GAAQ,GAEJ,EAAQ9B,EAAAA,SAAAA,EAAGW,GACb,OADiB,EAAA,EACjB,CAAA,OAAA,GAGGuB,EAGGtB,EAAAA,MAAAA,WAAaW,EAAMX,MAAAA,UAAsB,EAAVsB,IAFnCvB,EApBoC,EAAA,GACjCA,EAAI,EAAGA,EAAIN,EAAML,MAAAA,GAAGC,SAAUU,EAAG,CAAjCA,IAAAA,EAAAA,EAAAA,GAAiC,OAAA,GAAA,IAAA,WAKtC,SALsC,QAAA,GAAA,WAAA,EAAA,GAAA,OAAA,EAAA,GA0BrCmB,OAAAA,EAGF,SAASK,IAGT,IAFDL,IAAAA,GAAQ,EAEH9B,EAAI,EAAGA,EAAIK,EAAM,MAAA,GAAGJ,SAAUD,EAChC,IAAA,IAAIW,EAAI,EAAGA,EAAIN,EAAMJ,MAAAA,SAAUU,EAAG,CAC/BoB,IAAAA,EAAY1B,EAAMM,MAAAA,GAAGqB,MAAMhC,EAAI,GAAGoC,UAAU,SAAAH,GAASA,OAAAA,IAEvDF,MAAe,IAAfA,GACE1B,EAAMM,MAAAA,GAAGX,IAAMK,EAAMM,MAAAA,GAAGX,KAAOK,EAAMM,MAAAA,GAAGoB,EAAY/B,EAAI,IAD1D+B,CAKEG,IAAAA,EAAU7B,EAAMM,MAAAA,GAAGX,GAMrB,GAJEW,EAAAA,MAAAA,GAAGX,IAAMK,EAAMM,MAAAA,GAAGoB,EAAY/B,EAAI,GAClCW,EAAAA,MAAAA,GAAGoB,EAAY/B,EAAI,GAAK,EAC9B8B,GAAQ,GAEJ,EAAQnB,EAAAA,SAAAA,EAAGX,GACb,OAGGkC,EAGGtB,EAAAA,MAAAA,WAAaW,EAAMX,MAAAA,UAAsB,EAAVsB,IAFnCvB,GAODmB,OAAAA,EAGF,SAASO,IAGT,IAFDP,IAAAA,GAAQ,EAEH9B,EAAIK,EAAM,MAAA,GAAGJ,OAAS,EAAGD,GAAK,IAAKA,EACrC,IAAA,IAAIW,EAAI,EAAGA,EAAIN,EAAMJ,MAAAA,SAAUU,EAAG,CAC/BoB,IAAAA,GAAY,EAAc1B,EAAAA,eAAAA,EAAMM,MAAAA,GAAGqB,MAAM,EAAGhC,GAAI,SAAAiC,GAASA,OAAAA,IAE3DF,MAAe,IAAfA,GACE1B,EAAMM,MAAAA,GAAGX,IAAMK,EAAMM,MAAAA,GAAGX,KAAOK,EAAMM,MAAAA,GAAGoB,IAD1CA,CAKEG,IAAAA,EAAU7B,EAAMM,MAAAA,GAAGX,GAMrB,GAJEW,EAAAA,MAAAA,GAAGX,IAAMK,EAAMM,MAAAA,GAAGoB,GAClBpB,EAAAA,MAAAA,GAAGoB,GAAa,EACtBD,GAAQ,GAEJ,EAAQnB,EAAAA,SAAAA,EAAGX,GACb,OAGGkC,EAGGtB,EAAAA,MAAAA,WAAaW,EAAMX,MAAAA,UAAsB,EAAVsB,IAFnCvB,GAODmB,OAAAA,EAGF,SAASQ,IAGT,IAFDR,IAAAA,GAAQ,EAEH9B,EAAI,EAAGA,EAAIK,EAAMJ,MAAAA,SAAUD,EAC7B,IADgC,IAAA,EAAA,SAAA,GAE7B+B,IAAAA,EAAY1B,EAAM2B,MAAAA,MAAMhC,EAAI,GAAGoC,UAAU,SAAAH,GAASA,OAAAA,EAAMtB,KAE1DoB,IAAe,IAAfA,GACE1B,EAAML,MAAAA,GAAGW,IAAMN,EAAML,MAAAA,GAAGW,KAAON,EAAM0B,MAAAA,EAAY/B,EAAI,GAAGW,GAC5D,OADiE,EAAA,EACjE,WAGIuB,IAAAA,EAAU7B,EAAML,MAAAA,GAAGW,GAMrB,GAJEX,EAAAA,MAAAA,GAAGW,IAAMN,EAAM0B,MAAAA,EAAY/B,EAAI,GAAGW,GAClCoB,EAAAA,MAAAA,EAAY/B,EAAI,GAAGW,GAAK,EAC9BmB,GAAQ,GAEJ,EAAQ9B,EAAAA,SAAAA,EAAGW,GACb,OADiB,EAAA,EACjB,CAAA,OAAA,GAGGuB,EAGGtB,EAAAA,MAAAA,WAAaW,EAAMX,MAAAA,UAAsB,EAAVsB,IAFnCvB,EApB+B,EAAA,GAC5BA,EAAI,EAAGA,EAAIN,EAAML,MAAAA,GAAGC,SAAUU,EAAG,CAAjCA,IAAAA,EAAAA,EAAAA,GAAiC,OAAA,GAAA,IAAA,WAKtC,SALsC,QAAA,GAAA,WAAA,EAAA,GAAA,OAAA,EAAA,GA0BrCmB,OAAAA;;AC/GT,aAtBA,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,UACA,EAAA,QAAA,cAoBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlBA,IAAMS,EAASpC,SAASC,cAAc,WAChCoC,EAAWrC,SAASsC,iBAAiB,YACrCC,EAAgB,CACPb,UAAAA,EADO,SAEPM,UAAAA,EAFO,SAGNE,WAAAA,EAHM,UAITC,QAAAA,EAAAA,QAGbC,EAAOI,iBAAiB,QAAS,WACTH,IADe,EACfA,EAAAA,EAAAA,GADe,IACL,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,EAAA,MACtB1B,UAAUC,IAAI,WAFa,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAKrC,EAAA,EAAA,cACA,EAAA,EAAA,UAGFZ,SAASwC,iBAAiB,UAAW,SAAAC,GAC9BpB,EAAD,SAAaoB,EAAcC,IAAIC,WAAW,WAI9CP,EAAOzB,UAAUa,OAAO,SACxBY,EAAOzB,UAAUC,IAAI,WACrBwB,EAAO3B,UAAY,UAEf8B,EAAcE,EAAcC,SAC9B,EAAA,EAAA,UAGF,EAAA,EAAA,SACA,EAAA,EAAA","file":"main.234a72cd.js","sourceRoot":"..\\src","sourcesContent":["export function getRandom(max) {\r\n  return Math.trunc(Math.random() * max);\r\n}\r\n\r\nexport function findLastIndex(array, callback) {\r\n  for (let i = array.length - 1; i >= 0; --i) {\r\n    if (callback(array[i], i, array)) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n","import { getRandom } from './utilities';\r\n\r\nconst tbody = document.querySelector('tbody');\r\n\r\nexport const field = new Array(tbody.children.length);\r\n\r\nexport function resetField() {\r\n  for (let i = 0; i < field.length; ++i) {\r\n    field[i] = new Array(tbody.children[i].children.length).fill(0);\r\n  }\r\n}\r\n\r\nexport function draw() {\r\n  for (let i = 0; i < field.length; ++i) {\r\n    for (let j = 0; j < field[i].length; ++j) {\r\n      tbody.children[i].children[j].innerText = '';\r\n      tbody.children[i].children[j].className = 'field-cell';\r\n\r\n      if (field[i][j]) {\r\n        tbody.children[i].children[j].innerText = field[i][j];\r\n\r\n        tbody.children[i].children[j]\r\n          .classList.add(`field-cell--${field[i][j]}`);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function spawn() {\r\n  const availableCells = [];\r\n\r\n  for (let i = 0; i < field.length; ++i) {\r\n    for (let j = 0; j < field[i].length; ++j) {\r\n      if (!field[i][j]) {\r\n        availableCells.push(i * field[i].length + j);\r\n      }\r\n    }\r\n  }\r\n\r\n  const newIndex = availableCells[getRandom(availableCells.length)];\r\n\r\n  field[Math.trunc(newIndex / field[0].length)][newIndex % field[0].length]\r\n    = Math.random() >= 0.9 ? 4 : 2;\r\n}\r\n\r\nexport function checkIsOver() {\r\n  for (let i = 0; i < field.length; ++i) {\r\n    for (let j = 0; j < field[i].length; ++j) {\r\n      if (!field[i][j]) {\r\n        return false;\r\n      }\r\n\r\n      if ((i > 0 && field[i][j] === field[i - 1][j])\r\n        || (i < field.length - 1 && field[i][j] === field[i + 1][j])\r\n        || (j > 0 && field[i][j] === field[i][j - 1])\r\n        || (j < field[i].length - 1 && field[i][j] === field[i][j + 1])) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n","import { field, resetField, spawn, checkIsOver } from './field';\r\n\r\nconst winMessage = document.querySelector('.message-win');\r\nconst loseMessage = document.querySelector('.message-lose');\r\n\r\nexport const score = document.querySelector('.game-score');\r\nexport let started = false;\r\n\r\nexport function resetGame() {\r\n  resetField();\r\n  spawn();\r\n  spawn();\r\n\r\n  started = true;\r\n  score.innerText = 0;\r\n}\r\n\r\nexport function winGame(i, j) {\r\n  if (field[i][j] === 2048) {\r\n    winMessage.classList.remove('hidden');\r\n    started = false;\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function loseGame() {\r\n  if (checkIsOver()) {\r\n    loseMessage.classList.remove('hidden');\r\n    started = false;\r\n  }\r\n}\r\n","import { field } from './field';\r\nimport { findLastIndex } from './utilities';\r\nimport { score, winGame } from './game';\r\n\r\nexport function moveDown() {\r\n  let moved = false;\r\n\r\n  for (let i = field.length - 1; i >= 0; --i) {\r\n    for (let j = 0; j < field[i].length; ++j) {\r\n      const nextBlock = findLastIndex(field.slice(0, i), value => value[j]);\r\n\r\n      if (nextBlock === -1\r\n        || (field[i][j] && field[i][j] !== field[nextBlock][j])) {\r\n        continue;\r\n      }\r\n\r\n      const current = field[i][j];\r\n\r\n      field[i][j] += field[nextBlock][j];\r\n      field[nextBlock][j] = 0;\r\n      moved = true;\r\n\r\n      if (winGame(i, j)) {\r\n        return;\r\n      }\r\n\r\n      if (!current) {\r\n        --j;\r\n      } else {\r\n        score.innerText = +score.innerText + current * 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  return moved;\r\n}\r\n\r\nexport function moveLeft() {\r\n  let moved = false;\r\n\r\n  for (let i = 0; i < field[0].length; ++i) {\r\n    for (let j = 0; j < field.length; ++j) {\r\n      const nextBlock = field[j].slice(i + 1).findIndex(value => value);\r\n\r\n      if (nextBlock === -1\r\n        || (field[j][i] && field[j][i] !== field[j][nextBlock + i + 1])) {\r\n        continue;\r\n      }\r\n\r\n      const current = field[j][i];\r\n\r\n      field[j][i] += field[j][nextBlock + i + 1];\r\n      field[j][nextBlock + i + 1] = 0;\r\n      moved = true;\r\n\r\n      if (winGame(j, i)) {\r\n        return;\r\n      }\r\n\r\n      if (!current) {\r\n        --j;\r\n      } else {\r\n        score.innerText = +score.innerText + current * 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  return moved;\r\n}\r\n\r\nexport function moveRight() {\r\n  let moved = false;\r\n\r\n  for (let i = field[0].length - 1; i >= 0; --i) {\r\n    for (let j = 0; j < field.length; ++j) {\r\n      const nextBlock = findLastIndex(field[j].slice(0, i), value => value);\r\n\r\n      if (nextBlock === -1\r\n        || (field[j][i] && field[j][i] !== field[j][nextBlock])) {\r\n        continue;\r\n      }\r\n\r\n      const current = field[j][i];\r\n\r\n      field[j][i] += field[j][nextBlock];\r\n      field[j][nextBlock] = 0;\r\n      moved = true;\r\n\r\n      if (winGame(j, i)) {\r\n        return;\r\n      }\r\n\r\n      if (!current) {\r\n        --j;\r\n      } else {\r\n        score.innerText = +score.innerText + current * 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  return moved;\r\n}\r\n\r\nexport function moveUp() {\r\n  let moved = false;\r\n\r\n  for (let i = 0; i < field.length; ++i) {\r\n    for (let j = 0; j < field[i].length; ++j) {\r\n      const nextBlock = field.slice(i + 1).findIndex(value => value[j]);\r\n\r\n      if (nextBlock === -1\r\n        || (field[i][j] && field[i][j] !== field[nextBlock + i + 1][j])) {\r\n        continue;\r\n      }\r\n\r\n      const current = field[i][j];\r\n\r\n      field[i][j] += field[nextBlock + i + 1][j];\r\n      field[nextBlock + i + 1][j] = 0;\r\n      moved = true;\r\n\r\n      if (winGame(i, j)) {\r\n        return;\r\n      }\r\n\r\n      if (!current) {\r\n        --j;\r\n      } else {\r\n        score.innerText = +score.innerText + current * 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  return moved;\r\n}\r\n","import { draw, spawn } from './field';\r\nimport { started, resetGame, loseGame } from './game';\r\nimport { moveDown, moveLeft, moveRight, moveUp } from './movement';\r\n\r\nconst button = document.querySelector('.button');\r\nconst messages = document.querySelectorAll('.message');\r\nconst movementByKey = {\r\n  'ArrowDown': moveDown,\r\n  'ArrowLeft': moveLeft,\r\n  'ArrowRight': moveRight,\r\n  'ArrowUp': moveUp,\r\n};\r\n\r\nbutton.addEventListener('click', () => {\r\n  for (const message of messages) {\r\n    message.classList.add('hidden');\r\n  }\r\n\r\n  resetGame();\r\n  draw();\r\n});\r\n\r\ndocument.addEventListener('keydown', keyboardEvent => {\r\n  if (!started || !keyboardEvent.key.startsWith('Arrow')) {\r\n    return;\r\n  }\r\n\r\n  button.classList.remove('start');\r\n  button.classList.add('restart');\r\n  button.innerText = 'Restart';\r\n\r\n  if (movementByKey[keyboardEvent.key]()) {\r\n    spawn();\r\n  }\r\n\r\n  draw();\r\n  loseGame();\r\n});\r\n"]}